/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.vass.ficha.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import es.vass.ficha.model.Jornada;
import es.vass.ficha.model.JornadaModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Jornada service. Represents a row in the &quot;FICHA_Jornada&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link JornadaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JornadaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see JornadaImpl
 * @see Jornada
 * @see JornadaModel
 * @generated
 */
@ProviderType
public class JornadaModelImpl extends BaseModelImpl<Jornada>
	implements JornadaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a jornada model instance should use the {@link Jornada} interface instead.
	 */
	public static final String TABLE_NAME = "FICHA_Jornada";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "jornadaId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "fechaFinalizacion", Types.TIMESTAMP },
			{ "latitud", Types.BIGINT },
			{ "longuitud", Types.BIGINT },
			{ "horasAsignadas", Types.BIGINT },
			{ "tipoServicio", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jornadaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("fechaFinalizacion", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("latitud", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("longuitud", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("horasAsignadas", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tipoServicio", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table FICHA_Jornada (uuid_ VARCHAR(75) null,jornadaId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,fechaFinalizacion DATE null,latitud LONG,longuitud LONG,horasAsignadas LONG,tipoServicio LONG)";
	public static final String TABLE_SQL_DROP = "drop table FICHA_Jornada";
	public static final String ORDER_BY_JPQL = " ORDER BY jornada.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY FICHA_Jornada.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(es.vass.ficha.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.es.vass.ficha.model.Jornada"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(es.vass.ficha.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.es.vass.ficha.model.Jornada"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(es.vass.ficha.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.vass.ficha.model.Jornada"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long USERID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long CREATEDATE_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(es.vass.ficha.service.util.ServiceProps.get(
				"lock.expiration.time.es.vass.ficha.model.Jornada"));

	public JornadaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _jornadaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setJornadaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _jornadaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Jornada.class;
	}

	@Override
	public String getModelClassName() {
		return Jornada.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("jornadaId", getJornadaId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("fechaFinalizacion", getFechaFinalizacion());
		attributes.put("latitud", getLatitud());
		attributes.put("longuitud", getLonguitud());
		attributes.put("horasAsignadas", getHorasAsignadas());
		attributes.put("tipoServicio", getTipoServicio());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long jornadaId = (Long)attributes.get("jornadaId");

		if (jornadaId != null) {
			setJornadaId(jornadaId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date fechaFinalizacion = (Date)attributes.get("fechaFinalizacion");

		if (fechaFinalizacion != null) {
			setFechaFinalizacion(fechaFinalizacion);
		}

		Long latitud = (Long)attributes.get("latitud");

		if (latitud != null) {
			setLatitud(latitud);
		}

		Long longuitud = (Long)attributes.get("longuitud");

		if (longuitud != null) {
			setLonguitud(longuitud);
		}

		Long horasAsignadas = (Long)attributes.get("horasAsignadas");

		if (horasAsignadas != null) {
			setHorasAsignadas(horasAsignadas);
		}

		Long tipoServicio = (Long)attributes.get("tipoServicio");

		if (tipoServicio != null) {
			setTipoServicio(tipoServicio);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getJornadaId() {
		return _jornadaId;
	}

	@Override
	public void setJornadaId(long jornadaId) {
		_jornadaId = jornadaId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public Date getFechaFinalizacion() {
		return _fechaFinalizacion;
	}

	@Override
	public void setFechaFinalizacion(Date fechaFinalizacion) {
		_fechaFinalizacion = fechaFinalizacion;
	}

	@Override
	public long getLatitud() {
		return _latitud;
	}

	@Override
	public void setLatitud(long latitud) {
		_latitud = latitud;
	}

	@Override
	public long getLonguitud() {
		return _longuitud;
	}

	@Override
	public void setLonguitud(long longuitud) {
		_longuitud = longuitud;
	}

	@Override
	public long getHorasAsignadas() {
		return _horasAsignadas;
	}

	@Override
	public void setHorasAsignadas(long horasAsignadas) {
		_horasAsignadas = horasAsignadas;
	}

	@Override
	public long getTipoServicio() {
		return _tipoServicio;
	}

	@Override
	public void setTipoServicio(long tipoServicio) {
		_tipoServicio = tipoServicio;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Jornada.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Jornada.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Jornada toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Jornada)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JornadaImpl jornadaImpl = new JornadaImpl();

		jornadaImpl.setUuid(getUuid());
		jornadaImpl.setJornadaId(getJornadaId());
		jornadaImpl.setGroupId(getGroupId());
		jornadaImpl.setCompanyId(getCompanyId());
		jornadaImpl.setUserId(getUserId());
		jornadaImpl.setUserName(getUserName());
		jornadaImpl.setCreateDate(getCreateDate());
		jornadaImpl.setModifiedDate(getModifiedDate());
		jornadaImpl.setFechaFinalizacion(getFechaFinalizacion());
		jornadaImpl.setLatitud(getLatitud());
		jornadaImpl.setLonguitud(getLonguitud());
		jornadaImpl.setHorasAsignadas(getHorasAsignadas());
		jornadaImpl.setTipoServicio(getTipoServicio());

		jornadaImpl.resetOriginalValues();

		return jornadaImpl;
	}

	@Override
	public int compareTo(Jornada jornada) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), jornada.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Jornada)) {
			return false;
		}

		Jornada jornada = (Jornada)obj;

		long primaryKey = jornada.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		JornadaModelImpl jornadaModelImpl = this;

		jornadaModelImpl._originalUuid = jornadaModelImpl._uuid;

		jornadaModelImpl._originalGroupId = jornadaModelImpl._groupId;

		jornadaModelImpl._setOriginalGroupId = false;

		jornadaModelImpl._originalCompanyId = jornadaModelImpl._companyId;

		jornadaModelImpl._setOriginalCompanyId = false;

		jornadaModelImpl._originalUserId = jornadaModelImpl._userId;

		jornadaModelImpl._setOriginalUserId = false;

		jornadaModelImpl._setModifiedDate = false;

		jornadaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Jornada> toCacheModel() {
		JornadaCacheModel jornadaCacheModel = new JornadaCacheModel();

		jornadaCacheModel.uuid = getUuid();

		String uuid = jornadaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			jornadaCacheModel.uuid = null;
		}

		jornadaCacheModel.jornadaId = getJornadaId();

		jornadaCacheModel.groupId = getGroupId();

		jornadaCacheModel.companyId = getCompanyId();

		jornadaCacheModel.userId = getUserId();

		jornadaCacheModel.userName = getUserName();

		String userName = jornadaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			jornadaCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			jornadaCacheModel.createDate = createDate.getTime();
		}
		else {
			jornadaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jornadaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jornadaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date fechaFinalizacion = getFechaFinalizacion();

		if (fechaFinalizacion != null) {
			jornadaCacheModel.fechaFinalizacion = fechaFinalizacion.getTime();
		}
		else {
			jornadaCacheModel.fechaFinalizacion = Long.MIN_VALUE;
		}

		jornadaCacheModel.latitud = getLatitud();

		jornadaCacheModel.longuitud = getLonguitud();

		jornadaCacheModel.horasAsignadas = getHorasAsignadas();

		jornadaCacheModel.tipoServicio = getTipoServicio();

		return jornadaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", jornadaId=");
		sb.append(getJornadaId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", fechaFinalizacion=");
		sb.append(getFechaFinalizacion());
		sb.append(", latitud=");
		sb.append(getLatitud());
		sb.append(", longuitud=");
		sb.append(getLonguitud());
		sb.append(", horasAsignadas=");
		sb.append(getHorasAsignadas());
		sb.append(", tipoServicio=");
		sb.append(getTipoServicio());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("es.vass.ficha.model.Jornada");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jornadaId</column-name><column-value><![CDATA[");
		sb.append(getJornadaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaFinalizacion</column-name><column-value><![CDATA[");
		sb.append(getFechaFinalizacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>latitud</column-name><column-value><![CDATA[");
		sb.append(getLatitud());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longuitud</column-name><column-value><![CDATA[");
		sb.append(getLonguitud());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>horasAsignadas</column-name><column-value><![CDATA[");
		sb.append(getHorasAsignadas());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoServicio</column-name><column-value><![CDATA[");
		sb.append(getTipoServicio());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Jornada.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Jornada.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _jornadaId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _fechaFinalizacion;
	private long _latitud;
	private long _longuitud;
	private long _horasAsignadas;
	private long _tipoServicio;
	private long _columnBitmask;
	private Jornada _escapedModel;
}